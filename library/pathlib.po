# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/PyCampES/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-05 12:54+0200\n"
"PO-Revision-Date: 2020-05-14 01:09-0300\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: Carlos A. Crespo <lvccrespo@gmail.com>\n"
"Language: es\n"
"X-Generator: Poedit 2.3\n"

#: ../Doc/library/pathlib.rst:3
msgid ":mod:`pathlib` --- Object-oriented filesystem paths"
msgstr ":mod:`pathlib` --- Rutas de sistema de archivos orientadas a objetos"

#: ../Doc/library/pathlib.rst:10
msgid "**Source code:** :source:`Lib/pathlib.py`"
msgstr "**Código fuente:** :source:`Lib/pathlib.py`"

#: ../Doc/library/pathlib.rst:16
msgid ""
"This module offers classes representing filesystem paths with semantics "
"appropriate for different operating systems.  Path classes are divided "
"between :ref:`pure paths <pure-paths>`, which provide purely computational "
"operations without I/O, and :ref:`concrete paths <concrete-paths>`, which "
"inherit from pure paths but also provide I/O operations."
msgstr ""
"Este módulo ofrece clases que representan rutas de sistema de archivos con "
"semántica apropiada para diferentes sistemas operativos. Las clases de ruta "
"se dividen entre :ref:`rutas puras <pure-paths>`, que proporcionan "
"operaciones puramente computacionales sin E/S, y :ref:`rutas concretas "
"<concrete-paths>`, que heredan de rutas puras pero también proporcionan "
"operaciones de E/S."

#: ../Doc/library/pathlib.rst:25
msgid ""
"If you've never used this module before or just aren't sure which class is "
"right for your task, :class:`Path` is most likely what you need. It "
"instantiates a :ref:`concrete path <concrete-paths>` for the platform the "
"code is running on."
msgstr ""
"Si nunca ha usado este módulo antes o simplemente no está seguro de qué "
"clase es la adecuada para su tarea,: class: `Path` es probablemente lo que "
"necesita. Crea una instancia :ref:`ruta concreta <concrete-paths>` para la "
"plataforma en la que se ejecuta el código."

#: ../Doc/library/pathlib.rst:29
msgid "Pure paths are useful in some special cases; for example:"
msgstr "Las rutas puras son útiles en algunos casos especiales; por ejemplo:"

#: ../Doc/library/pathlib.rst:31
msgid ""
"If you want to manipulate Windows paths on a Unix machine (or vice versa). "
"You cannot instantiate a :class:`WindowsPath` when running on Unix, but you "
"can instantiate :class:`PureWindowsPath`."
msgstr ""
"Si desea manipular las rutas de Windows en una máquina Unix (o viceversa). "
"No puede crear una instancia de: class:`WindowsPath` cuando se ejecuta en "
"Unix, pero puede crear una instancia de :class:`PureWindowsPath`."

#: ../Doc/library/pathlib.rst:34
msgid ""
"You want to make sure that your code only manipulates paths without actually "
"accessing the OS. In this case, instantiating one of the pure classes may be "
"useful since those simply don't have any OS-accessing operations."
msgstr ""
"Desea asegurar que su código solo manipule rutas sin acceder realmente al "
"sistema operativo. En este caso, crear instancias de una de las clases puras "
"puede ser útil, ya que simplemente no tienen ninguna operación de acceso al "
"sistema operativo."

#: ../Doc/library/pathlib.rst:39
msgid ":pep:`428`: The pathlib module -- object-oriented filesystem paths."
msgstr ""
":pep:`428`: El módulo pathlib -- rutas del sistema de archivos orientadas a "
"objetos."

#: ../Doc/library/pathlib.rst:42
msgid ""
"For low-level path manipulation on strings, you can also use the :mod:`os."
"path` module."
msgstr ""
"Para la manipulación de rutas de bajo nivel en cadenas, también puede usar "
"el módulo :mod:`os.path`."

#: ../Doc/library/pathlib.rst:47
msgid "Basic use"
msgstr "Uso básico"

#: ../Doc/library/pathlib.rst:49
msgid "Importing the main class::"
msgstr "Importando la clase principal::"

#: ../Doc/library/pathlib.rst:53
msgid "Listing subdirectories::"
msgstr "Listado de subdirectorios::"

#: ../Doc/library/pathlib.rst:60
#, fuzzy
msgid "Listing Python source files in this directory tree::"
msgstr "Listado de archivos script de Python en este árbol de directorios::"

#: ../Doc/library/pathlib.rst:67
msgid "Navigating inside a directory tree::"
msgstr "Navegando dentro de un árbol de directorios::"

#: ../Doc/library/pathlib.rst:76
msgid "Querying path properties::"
msgstr "Consultar propiedades de ruta::"

#: ../Doc/library/pathlib.rst:83
msgid "Opening a file::"
msgstr "Abrir un archivo::"

#: ../Doc/library/pathlib.rst:93
msgid "Pure paths"
msgstr "Rutas puras"

# "flavours", creo que en español confunde.
# En la traducción francesa menciona "familles"
#: ../Doc/library/pathlib.rst:95
msgid ""
"Pure path objects provide path-handling operations which don't actually "
"access a filesystem.  There are three ways to access these classes, which we "
"also call *flavours*:"
msgstr ""
"Los objetos ruta pura proporcionan operaciones de manejo de rutas que en "
"realidad no acceden al sistema de archivos. Hay tres formas de acceder a "
"estas clases, que llamaremos *familias*:"

#: ../Doc/library/pathlib.rst:101
msgid ""
"A generic class that represents the system's path flavour (instantiating it "
"creates either a :class:`PurePosixPath` or a :class:`PureWindowsPath`)::"
msgstr ""
"Una clase genérica que representa la familia de rutas del sistema (el "
"instanciador crea :class:`PurePosixPath` o un :class:`PureWindowsPath`)::"

#: ../Doc/library/pathlib.rst:107
#, fuzzy
msgid ""
"Each element of *pathsegments* can be either a string representing a path "
"segment, an object implementing the :class:`os.PathLike` interface which "
"returns a string, or another path object::"
msgstr ""
"Cada elemento de *pathsegments* puede ser una cadena que representa un "
"segmento de ruta, un objeto que implementa la interfaz :class:`os.PathLike` "
"que devuelve una cadena u otro objeto ruta::"

#: ../Doc/library/pathlib.rst:116
msgid "When *pathsegments* is empty, the current directory is assumed::"
msgstr "Cuando *pathsegments* está vacío, se asume el directorio actual::"

#: ../Doc/library/pathlib.rst:121
msgid ""
"When several absolute paths are given, the last is taken as an anchor "
"(mimicking :func:`os.path.join`'s behaviour)::"
msgstr ""
"Cuando se proporcionan varias rutas absolutas, la última se toma como un "
"ancla (copiando el comportamiento de :func:`os.path.join`::"

#: ../Doc/library/pathlib.rst:129
msgid ""
"However, in a Windows path, changing the local root doesn't discard the "
"previous drive setting::"
msgstr ""
"Sin embargo, en una ruta de Windows, cambiar la raíz local no elimina la "
"configuración de la unidad anterior:"

#: ../Doc/library/pathlib.rst:135
#, fuzzy
msgid ""
"Spurious slashes and single dots are collapsed, but double dots (``'..'``) "
"are not, since this would change the meaning of a path in the face of "
"symbolic links::"
msgstr ""
"Las barras y puntos espurios se colapsan, pero los puntos dobles (``'..'``) "
"no, ya que esto cambiaría el significado de una ruta frente a los enlaces "
"simbólicos:"

#: ../Doc/library/pathlib.rst:146
msgid ""
"(a naïve approach would make ``PurePosixPath('foo/../bar')`` equivalent to "
"``PurePosixPath('bar')``, which is wrong if ``foo`` is a symbolic link to "
"another directory)"
msgstr ""
"(un enfoque naif haría pensar que ``PurePosixPath('foo/../bar')`` es "
"equivalente a ``PurePosixPath('bar')``, lo cual es incorrecto si ``foo`` es "
"un enlace simbólico a otro directorio)"

#: ../Doc/library/pathlib.rst:150
msgid ""
"Pure path objects implement the :class:`os.PathLike` interface, allowing "
"them to be used anywhere the interface is accepted."
msgstr ""
"Los objetos ruta pura implementan la interfaz: class: `os.PathLike`, lo que "
"permite su uso en cualquier lugar donde se acepte la interfaz."

#: ../Doc/library/pathlib.rst:153
msgid "Added support for the :class:`os.PathLike` interface."
msgstr "Se agregó soporte para la interfaz :class:`os.PathLike`."

# referencia a "flavours" que tradujimos como familia
#: ../Doc/library/pathlib.rst:158
msgid ""
"A subclass of :class:`PurePath`, this path flavour represents non-Windows "
"filesystem paths::"
msgstr ""
"Una subclase de :class:`PurePath`, esta *familia* representa rutas que no "
"son del sistema de archivos de Windows::"

#: ../Doc/library/pathlib.rst:164 ../Doc/library/pathlib.rst:174
#: ../Doc/library/pathlib.rst:597 ../Doc/library/pathlib.rst:607
#: ../Doc/library/pathlib.rst:617
msgid "*pathsegments* is specified similarly to :class:`PurePath`."
msgstr "*pathsegments* se especifica de manera similar a :class:`PurePath`."

#: ../Doc/library/pathlib.rst:168
#, fuzzy
msgid ""
"A subclass of :class:`PurePath`, this path flavour represents Windows "
"filesystem paths::"
msgstr ""
"Una subclase de :class:`PurePath`, esta *familia* representa las rutas del "
"sistema de archivos de Windows::"

#: ../Doc/library/pathlib.rst:176
msgid ""
"Regardless of the system you're running on, you can instantiate all of these "
"classes, since they don't provide any operation that does system calls."
msgstr ""
"Independientemente del sistema en el que se encuentre, puede crear "
"instancias de todas estas clases, ya que no proporcionan ninguna operación "
"que llame al sistema operativo."

#: ../Doc/library/pathlib.rst:181
msgid "General properties"
msgstr "Propiedades generales"

# "hashables"?
#: ../Doc/library/pathlib.rst:183
#, fuzzy
msgid ""
"Paths are immutable and hashable.  Paths of a same flavour are comparable "
"and orderable.  These properties respect the flavour's case-folding "
"semantics::"
msgstr ""
"Las rutas son inmutables y *\"hashables\"*. Las rutas de una misma familia "
"son comparables y ordenables. Estas propiedades respetan el orden "
"lexicográfico definido por la familia::"

#: ../Doc/library/pathlib.rst:196
msgid "Paths of a different flavour compare unequal and cannot be ordered::"
msgstr "Rutas de diferentes familias no son iguales y no se pueden ordenar::"

#: ../Doc/library/pathlib.rst:207
msgid "Operators"
msgstr "Operadores"

#: ../Doc/library/pathlib.rst:209
msgid ""
"The slash operator helps create child paths, similarly to :func:`os.path."
"join`::"
msgstr ""
"El operador barra ayuda a crear rutas secundarias, similar a :func:`os.path."
"join`::"

#: ../Doc/library/pathlib.rst:220
msgid ""
"A path object can be used anywhere an object implementing :class:`os."
"PathLike` is accepted::"
msgstr ""
"Se puede usar un objeto ruta en cualquier lugar donde se acepte un objeto "
"que implemente :class:`os.PathLike`::"

#: ../Doc/library/pathlib.rst:228
#, fuzzy
msgid ""
"The string representation of a path is the raw filesystem path itself (in "
"native form, e.g. with backslashes under Windows), which you can pass to any "
"function taking a file path as a string::"
msgstr ""
"La representación de una ruta en una cadena de caracteres es la ruta sin "
"procesar en sí (en su forma nativa, es decir, con barras diagonales inversas "
"en Windows), y que puede pasar a cualquier función que tome una ruta como "
"una cadena de caracteres:"

#: ../Doc/library/pathlib.rst:239
msgid ""
"Similarly, calling :class:`bytes` on a path gives the raw filesystem path as "
"a bytes object, as encoded by :func:`os.fsencode`::"
msgstr ""
"Del mismo modo, llamar a :class:`bytes` en una ruta proporciona la ruta "
"cruda del sistema de archivos como un objeto bytes, codificado por :func:`os."
"fsencode`::"

#: ../Doc/library/pathlib.rst:246
msgid ""
"Calling :class:`bytes` is only recommended under Unix.  Under Windows, the "
"unicode form is the canonical representation of filesystem paths."
msgstr ""
"Llamar a :class:`bytes` solo se recomienda en Unix. En Windows, la forma "
"unicode es la representación canónica de las rutas del sistema de archivos."

#: ../Doc/library/pathlib.rst:251
msgid "Accessing individual parts"
msgstr "Acceso a partes individuales"

#: ../Doc/library/pathlib.rst:253
msgid ""
"To access the individual \"parts\" (components) of a path, use the following "
"property:"
msgstr ""
"Para acceder a las \"partes\" (componentes) individuales de una ruta, use la "
"siguiente propiedad:"

#: ../Doc/library/pathlib.rst:258
msgid "A tuple giving access to the path's various components::"
msgstr "Una tupla que da acceso a los diversos componentes de la ruta::"

#: ../Doc/library/pathlib.rst:268
msgid "(note how the drive and local root are regrouped in a single part)"
msgstr ""
"(observese cómo la unidad y la raíz local se reagrupan en una sola parte)"

#: ../Doc/library/pathlib.rst:272
msgid "Methods and properties"
msgstr "Métodos y propiedades"

#: ../Doc/library/pathlib.rst:278
msgid "Pure paths provide the following methods and properties:"
msgstr "Las rutas puras proporcionan los siguientes métodos y propiedades:"

#: ../Doc/library/pathlib.rst:282
msgid "A string representing the drive letter or name, if any::"
msgstr ""
"Una cadena que representa la letra o el nombre de la unidad, si corresponde::"

# localizaciones UNC?
# rutas UNC?
# recursos compartidos UNC?
# en caso de ajustar, repasar el resto del documento.
# https://es.wikipedia.org/wiki/Ruta_(inform%C3%A1tica)#Uniform_Naming_Convention
# https://en.wikipedia.org/wiki/Path_(computing)#Universal_Naming_Convention
#: ../Doc/library/pathlib.rst:291
#, fuzzy
msgid "UNC shares are also considered drives::"
msgstr "Las localizaciones UNC también son consideradas como unidades::"

#: ../Doc/library/pathlib.rst:298
msgid "A string representing the (local or global) root, if any::"
msgstr "Una cadena que representa la raíz (local o global), si la hay::"

#: ../Doc/library/pathlib.rst:307
msgid "UNC shares always have a root::"
msgstr "Las localizaciones UNC siempre tienen una raíz::"

#: ../Doc/library/pathlib.rst:314
msgid "The concatenation of the drive and root::"
msgstr "La concatenación de la unidad y la raíz::"

#: ../Doc/library/pathlib.rst:328
msgid ""
"An immutable sequence providing access to the logical ancestors of the path::"
msgstr ""
"Una secuencia inmutable que proporciona acceso a los ancestros lógicos de la "
"ruta::"

#: ../Doc/library/pathlib.rst:342
msgid "The logical parent of the path::"
msgstr "El padre lógico de la ruta ::"

#: ../Doc/library/pathlib.rst:348
msgid "You cannot go past an anchor, or empty path::"
msgstr "No puede ir más allá de un ancla o una ruta vacía::"

#: ../Doc/library/pathlib.rst:358
msgid "This is a purely lexical operation, hence the following behaviour::"
msgstr ""

#: ../Doc/library/pathlib.rst:364
msgid ""
"If you want to walk an arbitrary filesystem path upwards, it is recommended "
"to first call :meth:`Path.resolve` so as to resolve symlinks and eliminate `"
"\"..\"` components."
msgstr ""

#: ../Doc/library/pathlib.rst:371
msgid ""
"A string representing the final path component, excluding the drive and "
"root, if any::"
msgstr ""

#: ../Doc/library/pathlib.rst:377
msgid "UNC drive names are not considered::"
msgstr ""

#: ../Doc/library/pathlib.rst:387
msgid "The file extension of the final component, if any::"
msgstr ""

#: ../Doc/library/pathlib.rst:399
msgid "A list of the path's file extensions::"
msgstr ""

#: ../Doc/library/pathlib.rst:411
msgid "The final path component, without its suffix::"
msgstr ""

#: ../Doc/library/pathlib.rst:423
msgid ""
"Return a string representation of the path with forward slashes (``/``)::"
msgstr ""

#: ../Doc/library/pathlib.rst:434
msgid ""
"Represent the path as a ``file`` URI.  :exc:`ValueError` is raised if the "
"path isn't absolute."
msgstr ""

#: ../Doc/library/pathlib.rst:447
msgid ""
"Return whether the path is absolute or not.  A path is considered absolute "
"if it has both a root and (if the flavour allows) a drive::"
msgstr ""

#: ../Doc/library/pathlib.rst:467
msgid ""
"With :class:`PureWindowsPath`, return ``True`` if the path is considered "
"reserved under Windows, ``False`` otherwise.  With :class:`PurePosixPath`, "
"``False`` is always returned."
msgstr ""

#: ../Doc/library/pathlib.rst:476
msgid ""
"File system calls on reserved paths can fail mysteriously or have unintended "
"effects."
msgstr ""

#: ../Doc/library/pathlib.rst:482
msgid ""
"Calling this method is equivalent to combining the path with each of the "
"*other* arguments in turn::"
msgstr ""

#: ../Doc/library/pathlib.rst:497
msgid ""
"Match this path against the provided glob-style pattern.  Return ``True`` if "
"matching is successful, ``False`` otherwise."
msgstr ""

#: ../Doc/library/pathlib.rst:500
msgid ""
"If *pattern* is relative, the path can be either relative or absolute, and "
"matching is done from the right::"
msgstr ""

#: ../Doc/library/pathlib.rst:510
msgid ""
"If *pattern* is absolute, the path must be absolute, and the whole path must "
"match::"
msgstr ""

#: ../Doc/library/pathlib.rst:518
msgid "As with other methods, case-sensitivity follows platform defaults::"
msgstr ""

#: ../Doc/library/pathlib.rst:528
msgid ""
"Compute a version of this path relative to the path represented by *other*.  "
"If it's impossible, ValueError is raised::"
msgstr ""

#: ../Doc/library/pathlib.rst:546
msgid ""
"Return a new path with the :attr:`name` changed.  If the original path "
"doesn't have a name, ValueError is raised::"
msgstr ""

#: ../Doc/library/pathlib.rst:563
msgid ""
"Return a new path with the :attr:`suffix` changed.  If the original path "
"doesn't have a suffix, the new *suffix* is appended instead.  If the "
"*suffix* is an empty string, the original suffix is removed::"
msgstr ""

#: ../Doc/library/pathlib.rst:582
msgid "Concrete paths"
msgstr ""

#: ../Doc/library/pathlib.rst:584
msgid ""
"Concrete paths are subclasses of the pure path classes.  In addition to "
"operations provided by the latter, they also provide methods to do system "
"calls on path objects.  There are three ways to instantiate concrete paths:"
msgstr ""

#: ../Doc/library/pathlib.rst:590
msgid ""
"A subclass of :class:`PurePath`, this class represents concrete paths of the "
"system's path flavour (instantiating it creates either a :class:`PosixPath` "
"or a :class:`WindowsPath`)::"
msgstr ""

#: ../Doc/library/pathlib.rst:601
msgid ""
"A subclass of :class:`Path` and :class:`PurePosixPath`, this class "
"represents concrete non-Windows filesystem paths::"
msgstr ""

#: ../Doc/library/pathlib.rst:611
msgid ""
"A subclass of :class:`Path` and :class:`PureWindowsPath`, this class "
"represents concrete Windows filesystem paths::"
msgstr ""

#: ../Doc/library/pathlib.rst:619
msgid ""
"You can only instantiate the class flavour that corresponds to your system "
"(allowing system calls on non-compatible path flavours could lead to bugs or "
"failures in your application)::"
msgstr ""

#: ../Doc/library/pathlib.rst:639
msgid "Methods"
msgstr ""

#: ../Doc/library/pathlib.rst:641
msgid ""
"Concrete paths provide the following methods in addition to pure paths "
"methods.  Many of these methods can raise an :exc:`OSError` if a system call "
"fails (for example because the path doesn't exist)."
msgstr ""

#: ../Doc/library/pathlib.rst:647
msgid ""
":meth:`~Path.exists()`, :meth:`~Path.is_dir()`, :meth:`~Path.is_file()`, :"
"meth:`~Path.is_mount()`, :meth:`~Path.is_symlink()`, :meth:`~Path."
"is_block_device()`, :meth:`~Path.is_char_device()`, :meth:`~Path."
"is_fifo()`, :meth:`~Path.is_socket()` now return ``False`` instead of "
"raising an exception for paths that contain characters unrepresentable at "
"the OS level."
msgstr ""

#: ../Doc/library/pathlib.rst:657
msgid ""
"Return a new path object representing the current directory (as returned by :"
"func:`os.getcwd`)::"
msgstr ""

#: ../Doc/library/pathlib.rst:666
msgid ""
"Return a new path object representing the user's home directory (as returned "
"by :func:`os.path.expanduser` with ``~`` construct)::"
msgstr ""

#: ../Doc/library/pathlib.rst:677
msgid ""
"Return a :class:`os.stat_result` object containing information about this "
"path, like :func:`os.stat`. The result is looked up at each call to this "
"method."
msgstr ""

#: ../Doc/library/pathlib.rst:691
msgid "Change the file mode and permissions, like :func:`os.chmod`::"
msgstr ""

#: ../Doc/library/pathlib.rst:703
msgid "Whether the path points to an existing file or directory::"
msgstr ""

#: ../Doc/library/pathlib.rst:715
msgid ""
"If the path points to a symlink, :meth:`exists` returns whether the symlink "
"*points to* an existing file or directory."
msgstr ""

#: ../Doc/library/pathlib.rst:721
msgid ""
"Return a new path with expanded ``~`` and ``~user`` constructs, as returned "
"by :meth:`os.path.expanduser`::"
msgstr ""

#: ../Doc/library/pathlib.rst:733
msgid ""
"Glob the given relative *pattern* in the directory represented by this path, "
"yielding all matching files (of any kind)::"
msgstr ""

#: ../Doc/library/pathlib.rst:741
msgid ""
"The \"``**``\" pattern means \"this directory and all subdirectories, "
"recursively\".  In other words, it enables recursive globbing::"
msgstr ""

#: ../Doc/library/pathlib.rst:752
msgid ""
"Using the \"``**``\" pattern in large directory trees may consume an "
"inordinate amount of time."
msgstr ""

#: ../Doc/library/pathlib.rst:758
msgid ""
"Return the name of the group owning the file.  :exc:`KeyError` is raised if "
"the file's gid isn't found in the system database."
msgstr ""

#: ../Doc/library/pathlib.rst:764
msgid ""
"Return ``True`` if the path points to a directory (or a symbolic link "
"pointing to a directory), ``False`` if it points to another kind of file."
msgstr ""

#: ../Doc/library/pathlib.rst:767 ../Doc/library/pathlib.rst:776
#: ../Doc/library/pathlib.rst:805 ../Doc/library/pathlib.rst:814
#: ../Doc/library/pathlib.rst:823 ../Doc/library/pathlib.rst:832
msgid ""
"``False`` is also returned if the path doesn't exist or is a broken symlink; "
"other errors (such as permission errors) are propagated."
msgstr ""

#: ../Doc/library/pathlib.rst:773
msgid ""
"Return ``True`` if the path points to a regular file (or a symbolic link "
"pointing to a regular file), ``False`` if it points to another kind of file."
msgstr ""

#: ../Doc/library/pathlib.rst:782
msgid ""
"Return ``True`` if the path is a :dfn:`mount point`: a point in a file "
"system where a different file system has been mounted.  On POSIX, the "
"function checks whether *path*'s parent, :file:`path/..`, is on a different "
"device than *path*, or whether :file:`path/..` and *path* point to the same "
"i-node on the same device --- this should detect mount points for all Unix "
"and POSIX variants.  Not implemented on Windows."
msgstr ""

#: ../Doc/library/pathlib.rst:794
msgid ""
"Return ``True`` if the path points to a symbolic link, ``False`` otherwise."
msgstr ""

#: ../Doc/library/pathlib.rst:796
msgid ""
"``False`` is also returned if the path doesn't exist; other errors (such as "
"permission errors) are propagated."
msgstr ""

#: ../Doc/library/pathlib.rst:802
msgid ""
"Return ``True`` if the path points to a Unix socket (or a symbolic link "
"pointing to a Unix socket), ``False`` if it points to another kind of file."
msgstr ""

#: ../Doc/library/pathlib.rst:811
msgid ""
"Return ``True`` if the path points to a FIFO (or a symbolic link pointing to "
"a FIFO), ``False`` if it points to another kind of file."
msgstr ""

#: ../Doc/library/pathlib.rst:820
msgid ""
"Return ``True`` if the path points to a block device (or a symbolic link "
"pointing to a block device), ``False`` if it points to another kind of file."
msgstr ""

#: ../Doc/library/pathlib.rst:829
msgid ""
"Return ``True`` if the path points to a character device (or a symbolic link "
"pointing to a character device), ``False`` if it points to another kind of "
"file."
msgstr ""

#: ../Doc/library/pathlib.rst:838
msgid ""
"When the path points to a directory, yield path objects of the directory "
"contents::"
msgstr ""

#: ../Doc/library/pathlib.rst:854
msgid ""
"Like :meth:`Path.chmod` but, if the path points to a symbolic link, the "
"symbolic link's mode is changed rather than its target's."
msgstr ""

#: ../Doc/library/pathlib.rst:860
msgid ""
"Like :meth:`Path.stat` but, if the path points to a symbolic link, return "
"the symbolic link's information rather than its target's."
msgstr ""

#: ../Doc/library/pathlib.rst:866
msgid ""
"Create a new directory at this given path.  If *mode* is given, it is "
"combined with the process' ``umask`` value to determine the file mode and "
"access flags.  If the path already exists, :exc:`FileExistsError` is raised."
msgstr ""

#: ../Doc/library/pathlib.rst:871
msgid ""
"If *parents* is true, any missing parents of this path are created as "
"needed; they are created with the default permissions without taking *mode* "
"into account (mimicking the POSIX ``mkdir -p`` command)."
msgstr ""

#: ../Doc/library/pathlib.rst:875
msgid ""
"If *parents* is false (the default), a missing parent raises :exc:"
"`FileNotFoundError`."
msgstr ""

#: ../Doc/library/pathlib.rst:878
msgid ""
"If *exist_ok* is false (the default), :exc:`FileExistsError` is raised if "
"the target directory already exists."
msgstr ""

#: ../Doc/library/pathlib.rst:881
msgid ""
"If *exist_ok* is true, :exc:`FileExistsError` exceptions will be ignored "
"(same behavior as the POSIX ``mkdir -p`` command), but only if the last path "
"component is not an existing non-directory file."
msgstr ""

#: ../Doc/library/pathlib.rst:885
msgid "The *exist_ok* parameter was added."
msgstr ""

#: ../Doc/library/pathlib.rst:891
msgid ""
"Open the file pointed to by the path, like the built-in :func:`open` "
"function does::"
msgstr ""

#: ../Doc/library/pathlib.rst:903
msgid ""
"Return the name of the user owning the file.  :exc:`KeyError` is raised if "
"the file's uid isn't found in the system database."
msgstr ""

#: ../Doc/library/pathlib.rst:909
msgid "Return the binary contents of the pointed-to file as a bytes object::"
msgstr ""

#: ../Doc/library/pathlib.rst:922
msgid "Return the decoded contents of the pointed-to file as a string::"
msgstr ""

#: ../Doc/library/pathlib.rst:930
msgid ""
"The file is opened and then closed. The optional parameters have the same "
"meaning as in :func:`open`."
msgstr ""

#: ../Doc/library/pathlib.rst:938
msgid ""
"Rename this file or directory to the given *target*, and return a new Path "
"instance pointing to *target*.  On Unix, if *target* exists and is a file, "
"it will be replaced silently if the user has permission.  *target* can be "
"either a string or another path object::"
msgstr ""

#: ../Doc/library/pathlib.rst:952 ../Doc/library/pathlib.rst:962
msgid "Added return value, return the new Path instance."
msgstr ""

#: ../Doc/library/pathlib.rst:958
msgid ""
"Rename this file or directory to the given *target*, and return a new Path "
"instance pointing to *target*.  If *target* points to an existing file or "
"directory, it will be unconditionally replaced."
msgstr ""

#: ../Doc/library/pathlib.rst:968
msgid ""
"Make the path absolute, resolving any symlinks.  A new path object is "
"returned::"
msgstr ""

#: ../Doc/library/pathlib.rst:977
msgid ""
"\"``..``\" components are also eliminated (this is the only method to do "
"so)::"
msgstr ""

#: ../Doc/library/pathlib.rst:983
msgid ""
"If the path doesn't exist and *strict* is ``True``, :exc:`FileNotFoundError` "
"is raised.  If *strict* is ``False``, the path is resolved as far as "
"possible and any remainder is appended without checking whether it exists.  "
"If an infinite loop is encountered along the resolution path, :exc:"
"`RuntimeError` is raised."
msgstr ""

#: ../Doc/library/pathlib.rst:989
msgid "The *strict* argument (pre-3.6 behavior is strict)."
msgstr ""

#: ../Doc/library/pathlib.rst:994
msgid ""
"This is like calling :func:`Path.glob` with \"``**/``\" added in front of "
"the given relative *pattern*::"
msgstr ""

#: ../Doc/library/pathlib.rst:1007
msgid "Remove this directory.  The directory must be empty."
msgstr ""

#: ../Doc/library/pathlib.rst:1012
msgid ""
"Return whether this path points to the same file as *other_path*, which can "
"be either a Path object, or a string.  The semantics are similar to :func:"
"`os.path.samefile` and :func:`os.path.samestat`."
msgstr ""

#: ../Doc/library/pathlib.rst:1016
msgid ""
"An :exc:`OSError` can be raised if either file cannot be accessed for some "
"reason."
msgstr ""

#: ../Doc/library/pathlib.rst:1033
msgid ""
"Make this path a symbolic link to *target*.  Under Windows, "
"*target_is_directory* must be true (default ``False``) if the link's target "
"is a directory.  Under POSIX, *target_is_directory*'s value is ignored."
msgstr ""

#: ../Doc/library/pathlib.rst:1049
msgid ""
"The order of arguments (link, target) is the reverse of :func:`os.symlink`'s."
msgstr ""

#: ../Doc/library/pathlib.rst:1055
msgid ""
"Create a file at this given path.  If *mode* is given, it is combined with "
"the process' ``umask`` value to determine the file mode and access flags.  "
"If the file already exists, the function succeeds if *exist_ok* is true (and "
"its modification time is updated to the current time), otherwise :exc:"
"`FileExistsError` is raised."
msgstr ""

#: ../Doc/library/pathlib.rst:1064
msgid ""
"Remove this file or symbolic link.  If the path points to a directory, use :"
"func:`Path.rmdir` instead."
msgstr ""

#: ../Doc/library/pathlib.rst:1067
msgid ""
"If *missing_ok* is false (the default), :exc:`FileNotFoundError` is raised "
"if the path does not exist."
msgstr ""

#: ../Doc/library/pathlib.rst:1070
msgid ""
"If *missing_ok* is true, :exc:`FileNotFoundError` exceptions will be ignored "
"(same behavior as the POSIX ``rm -f`` command)."
msgstr ""

#: ../Doc/library/pathlib.rst:1073
msgid "The *missing_ok* parameter was added."
msgstr ""

#: ../Doc/library/pathlib.rst:1079
msgid "Create a hard link pointing to a path named *target*."
msgstr ""

#: ../Doc/library/pathlib.rst:1086
msgid ""
"Open the file pointed to in bytes mode, write *data* to it, and close the "
"file::"
msgstr ""

#: ../Doc/library/pathlib.rst:1095
msgid "An existing file of the same name is overwritten."
msgstr ""

#: ../Doc/library/pathlib.rst:1102
msgid ""
"Open the file pointed to in text mode, write *data* to it, and close the "
"file::"
msgstr ""

#: ../Doc/library/pathlib.rst:1111
msgid ""
"An existing file of the same name is overwritten. The optional parameters "
"have the same meaning as in :func:`open`."
msgstr ""

#: ../Doc/library/pathlib.rst:1117
msgid "Correspondence to tools in the :mod:`os` module"
msgstr ""

#: ../Doc/library/pathlib.rst:1119
msgid ""
"Below is a table mapping various :mod:`os` functions to their corresponding :"
"class:`PurePath`/:class:`Path` equivalent."
msgstr ""

#: ../Doc/library/pathlib.rst:1124
msgid ""
"Although :func:`os.path.relpath` and :meth:`PurePath.relative_to` have some "
"overlapping use-cases, their semantics differ enough to warrant not "
"considering them equivalent."
msgstr ""

#: ../Doc/library/pathlib.rst:1129
msgid "os and os.path"
msgstr ""

#: ../Doc/library/pathlib.rst:1129
msgid "pathlib"
msgstr ""

#: ../Doc/library/pathlib.rst:1131
msgid ":func:`os.path.abspath`"
msgstr ":func:`os.path.abspath`"

#: ../Doc/library/pathlib.rst:1131
msgid ":meth:`Path.resolve`"
msgstr ":meth:`Path.resolve`"

#: ../Doc/library/pathlib.rst:1132
msgid ":func:`os.chmod`"
msgstr ":func:`os.chmod`"

#: ../Doc/library/pathlib.rst:1132
msgid ":meth:`Path.chmod`"
msgstr ":meth:`Path.chmod`"

#: ../Doc/library/pathlib.rst:1133
msgid ":func:`os.mkdir`"
msgstr ":func:`os.mkdir`"

#: ../Doc/library/pathlib.rst:1133
msgid ":meth:`Path.mkdir`"
msgstr ":meth:`Path.mkdir`"

#: ../Doc/library/pathlib.rst:1134
msgid ":func:`os.rename`"
msgstr ":func:`os.rename`"

#: ../Doc/library/pathlib.rst:1134
msgid ":meth:`Path.rename`"
msgstr ":meth:`Path.rename`"

#: ../Doc/library/pathlib.rst:1135
msgid ":func:`os.replace`"
msgstr ":func:`os.replace`"

#: ../Doc/library/pathlib.rst:1135
msgid ":meth:`Path.replace`"
msgstr ":meth:`Path.replace`"

#: ../Doc/library/pathlib.rst:1136
msgid ":func:`os.rmdir`"
msgstr ":func:`os.rmdir`"

#: ../Doc/library/pathlib.rst:1136
msgid ":meth:`Path.rmdir`"
msgstr ":meth:`Path.rmdir`"

#: ../Doc/library/pathlib.rst:1137
msgid ":func:`os.remove`, :func:`os.unlink`"
msgstr ":func:`os.remove`, :func:`os.unlink`"

#: ../Doc/library/pathlib.rst:1137
msgid ":meth:`Path.unlink`"
msgstr ":meth:`Path.unlink`"

#: ../Doc/library/pathlib.rst:1138
msgid ":func:`os.getcwd`"
msgstr ":func:`os.getcwd`"

#: ../Doc/library/pathlib.rst:1138
msgid ":func:`Path.cwd`"
msgstr ":func:`Path.cwd`"

#: ../Doc/library/pathlib.rst:1139
msgid ":func:`os.path.exists`"
msgstr ":func:`os.path.exists`"

#: ../Doc/library/pathlib.rst:1139
msgid ":meth:`Path.exists`"
msgstr ":meth:`Path.exists`"

#: ../Doc/library/pathlib.rst:1140
msgid ":func:`os.path.expanduser`"
msgstr ":func:`os.path.expanduser`"

#: ../Doc/library/pathlib.rst:1140
msgid ":meth:`Path.expanduser` and :meth:`Path.home`"
msgstr ":meth:`Path.expanduser` y :meth:`Path.home`"

#: ../Doc/library/pathlib.rst:1142
msgid ":func:`os.path.isdir`"
msgstr ":func:`os.path.isdir`"

#: ../Doc/library/pathlib.rst:1142
msgid ":meth:`Path.is_dir`"
msgstr ":meth:`Path.is_dir`"

#: ../Doc/library/pathlib.rst:1143
msgid ":func:`os.path.isfile`"
msgstr ":func:`os.path.isfile`"

#: ../Doc/library/pathlib.rst:1143
msgid ":meth:`Path.is_file`"
msgstr ":meth:`Path.is_file`"

#: ../Doc/library/pathlib.rst:1144
msgid ":func:`os.path.islink`"
msgstr ":func:`os.path.islink`"

#: ../Doc/library/pathlib.rst:1144
msgid ":meth:`Path.is_symlink`"
msgstr ":meth:`Path.is_symlink`"

#: ../Doc/library/pathlib.rst:1145
msgid ":func:`os.stat`"
msgstr ":func:`os.stat`"

#: ../Doc/library/pathlib.rst:1145
msgid ":meth:`Path.stat`, :meth:`Path.owner`, :meth:`Path.group`"
msgstr ":meth:`Path.stat`, :meth:`Path.owner`, :meth:`Path.group`"

#: ../Doc/library/pathlib.rst:1148
msgid ":func:`os.path.isabs`"
msgstr ":func:`os.path.isabs`"

#: ../Doc/library/pathlib.rst:1148
msgid ":meth:`PurePath.is_absolute`"
msgstr ":meth:`PurePath.is_absolute`"

#: ../Doc/library/pathlib.rst:1149
msgid ":func:`os.path.join`"
msgstr ":func:`os.path.join`"

#: ../Doc/library/pathlib.rst:1149
msgid ":func:`PurePath.joinpath`"
msgstr ":func:`PurePath.joinpath`"

#: ../Doc/library/pathlib.rst:1150
msgid ":func:`os.path.basename`"
msgstr ":func:`os.path.basename`"

#: ../Doc/library/pathlib.rst:1150
msgid ":data:`PurePath.name`"
msgstr ":data:`PurePath.name`"

#: ../Doc/library/pathlib.rst:1151
msgid ":func:`os.path.dirname`"
msgstr ":func:`os.path.dirname`"

#: ../Doc/library/pathlib.rst:1151
msgid ":data:`PurePath.parent`"
msgstr ":data:`PurePath.parent`"

#: ../Doc/library/pathlib.rst:1152
msgid ":func:`os.path.samefile`"
msgstr ":func:`os.path.samefile`"

#: ../Doc/library/pathlib.rst:1152
msgid ":meth:`Path.samefile`"
msgstr ":meth:`Path.samefile`"

#: ../Doc/library/pathlib.rst:1153
msgid ":func:`os.path.splitext`"
msgstr ":func:`os.path.splitext`"

#: ../Doc/library/pathlib.rst:1153
msgid ":data:`PurePath.suffix`"
msgstr ":data:`PurePath.suffix`"
